extends layout

block content

  script(src='//d3js.org/d3.v3.min.js')
  script(src='//code.jquery.com/jquery.min.js')
  div#renderer(style='width:800px;' + 'height:800px;')
    div#scatterPlot
    span.y20.absolute 20
    span.y40.absolute 40
    span.y60.absolute 60
    span.y80.absolute 80

    span#x20.absolute 20
    span#x40.absolute 40
    span#x60.absolute 60
    span#x80.absolute 80

  div#renderer2(style='width:800px;' + 'height:800px;')
    div#barGraph
    span.y20.absolute 2
    span.y40.absolute 4
    span.y60.absolute 6
    span.y80.absolute 8


  style.

    body{
      margin : 0;
      padding : 0px;
      padding-top : 30px;
    }

    #renderer{
      float : left;
      position: relative;
    }

    #scatterPlot {
      width : 600px;
      height : 600px;
      margin : 0 auto;
    }

    rect{
      background-color : white;
    }

    .absolute{
      position : absolute;
      left : 75px;
      top : 510px;
    }

    .y20{
      top : 395px;
    }

    .y40 {
      top : 295px;
    }

    .y60{
      top : 195px;
    }

    .y80{
      top : 95px;
    }

    #x20 {
      left : 190px;
    }

    #x40 {
      left : 290px;
    }

    #x60 {
      left : 390px;
    }

    #x80 {
      left : 490px;
    }

    #renderer2 {
      margin-left : 800px;
      position : relative;
    }

    #barGraph{
      width : 600px;
      height : 600px;
      margin : 0 auto;
    }

    .bar{
      padding-right : 2px;
    }

  script.

    var scatterData = []

    makeData(scatterData, 100, 'scatterData')

    var root = d3.select('#scatterPlot').append('svg').attr({
      width: 550,
      height: 550
    })

    /*가이드 라인*/
    drawGuidLine(root);

    for (var i = 1; i < 5; i++) {
      drawLine(root, 0, 100 * i, 500, 100 * i, 2, 'rgb(238,238,238)');
      drawLine(root, 100 * i, 0, 100 * i, 500, 2, 'rgb(238,238,238)');
    }

    for(var i=0; i<scatterData.length; i++){
      drawCircle(root, (scatterData[i].x*5), (500-scatterData[i].y*5), 3, scatterData[i].name)
    }


    $('#scatterPlot svg circle').hover(function(){

      var x = $(this).attr('cx')
      var y = $(this).attr('cy')


      drawLine(root,0, y, x-4, y).attr({
        class : 'lineGuide',
        stroke : 'rgba(255,11,2,0.5)'
      })

      drawLine(root, x, 500, x, y).attr({
        class : 'lineGuide',
        stroke : 'rgba(255,11,2,0.5)'
      })

      var ySpan = $('<span></span>').css({
        left : '60px',
        top : (y-6)+'px',
        color : 'red',
        position : 'absolute'
      }).html(((500-y)/5).toFixed(2)).attr('class','lineGuide')

      var xSpan = $('<span></span>').css({
        left : ((x*1)+90)+'px',
        top : '510px',
        color : 'red',
        position : 'absolute'
      }).html((x/5).toFixed(2)).attr('class','lineGuide')

      $('#renderer').append(ySpan)
      $('#renderer').append(xSpan)
    }, function(){
      $('.lineGuide').remove();
    })

    /*바 그래프*/
    var barRoot = d3.select('#barGraph').append('svg').attr({
      width : 500,
      height : 500
    })

    var barGraphData = []

    makeData(barGraphData, 100, 'barGraph');

    /*가이드 라인*/
    drawGuidLine(barRoot);

    for (var i = 1; i < 5; i++) {
      drawLine(barRoot, 0, 100 * i, 500, 100 * i, 2, 'rgb(238,238,238)');
    }

    quickSorting(barGraphData, 0, barGraphData.length-1)

    for(var i=0; i<barGraphData.length; i++){
      drawRect(barRoot, i*5, 500-barGraphData[i]*50, 4, barGraphData[i]*50)
    }


    $('#barGraph svg rect').hover(function(){
      var x = $(this).attr('x')
      var y = $(this).attr('y')

      drawLine(barRoot, 0, y, ((x*1)+4), y,2).attr({
        class : 'lineGuide',
        stroke : 'rgba(255,11,2,0.5)'
      })

      var ySpan = $('<span></span>').css({
        left : '65px',
        top : ((y*1)-5)+'px',
        color : 'red',
        position : 'absolute'
      }).html(((500-(y*1))/50).toFixed(2)).attr('class','lineGuide')

      $('#renderer2').append(ySpan)

    }, function(){
      $('.lineGuide').remove()
    })











    function makeData(array, number, kind){
      if(kind == 'scatterData'){
        for(var i=0; i<number; i++){
          array.push({
            name : 'node_'+i,
            x : Math.random() * 100,
            y : Math.random() * 100
          })
        }
      }else{
        for(var i=0; i<number; i++){
          array.push(Math.random() * 10);
        }
      }
    }

    function drawLine(root, x1, y1, x2, y2, strokeWidth, stroke){
       var line = root.append('line').attr({
        x1 : x1,
        y1 : y1,
        x2 : x2,
        y2 : y2,
        strokeWidth : strokeWidth,
        stroke : stroke
      })
      return line
    }

    function drawCircle(root, cx, cy, r, name){
      root.append('circle').attr({
        cx : cx,
        cy : cy,
        r : r,
        name : name,
        fill : 'rgba(31,162,43,0.7)'
      }).style('opacity',0).transition().style("opacity",1).duration(1500)
    }

    function drawRect(root, x, y, width, height){
      root.append('rect').attr({
        x: x + 2,
        y: '500px',
        width: width,
        height: height,
        fill: 'rgba(31,162,43,0.7)'
      }).transition().attr('y',y).duration(1500)
    }

    function drawGuidLine(root){
      drawLine(root, 0, 500, 500, 500, 3, 'black');
      drawLine(root, 0, 500, 0, 0, 3, 'black');
    }

    function quickSorting(arr, left, right){
      var i,j,temp;
      var pivot = arr[left]

      if(left < right){
        i = left
        j = right+1

        while(i<=j){
          do
          i++
          while(arr[i] > pivot)

          do
          j--
          while(arr[j] < pivot)

          if(i<j){
            temp = arr[i]
            arr[i] = arr[j]
            arr[j] = temp
          }else{
            break;
          }
        }

        temp = arr[j]
        arr[j] = arr[left]
        arr[left] = temp

        quickSorting(arr, left, j-1)
        quickSorting(arr, j+1, right)

      }

    }